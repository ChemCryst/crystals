#

***************************
#ZPREPARATION OF THE MODEL#
***************************

 This may be the input from SIR etc, from finding additional
 atoms in Fourier maps, or modifying the existing model (with \PEAKS, \EDIT,
 \COLLECT, \REGROUP,
 \REGULARISE, \MOLAX, \HYDROGENS, or \ANISO). These involve operations
 on LIST 5.

::

It is a good idea to assign a final atom numbering scheme as soon as
possible in the analysis. This will save a lot of hastle later.
#
 

^^^^^^
\Peaks
^^^^^^

This command converts the output from a Fourier peak search (held as a
 LIST 10) into a parameter list, LIST 5. It associates any new PEAKS with
 existing atoms. It can also be used for Fourier refinement, and for
 rejecting duplicate atoms, e.g. after changing space group.
 

^^^^^^^^^^^^^^^^^^^
\Collect & \Regroup
^^^^^^^^^^^^^^^^^^^

These commands assist in assembling molecules from peaks lists. REGROUP
 applies symmetry and
 reorders the atoms in LIST 5, COLLECT only applies symmetry. Both can be
 made to work with all atoms in LIST 5, or only operate on peaks of type
 Q. These are powerful utilities and can save a lot of manual editing.
 
::

  e.g.
      !\PEAK
      !END
      !\COLLECT
      !SELECT TYPE = PEAK
      !END
      !\SCRIPT PLOT
      !\REGROUP
      !SELECT SEQUENCE=YES
      !END
#
 These commands take peaks from the latest Fourier map and
 try to collect atoms of TYPE 'Q' (i.e. new peaks) so
 that they are within bonding distance of existing atoms. The PLOT
 script displays the structure and permits the renaming of peaks and
 atoms, and the exclusion of spurious peaks. REGROUP tries to number the
 atoms so that adjacent ones have sequential serial numbers.
 

^^^^^
\Edit
^^^^^

The CRYSTALS editor, \EDIT, is designed to perform crystallograhic
 edits on the atom parameters, in LIST 5. If anything needs to be done
 on groups of atoms, \EDIT is likely to be more convenient than using a text
 editor on the parameter list.
 
::

  e.g.
     !\EDIT
     !CHANGE    FIRST(U[ISO])  UNTIL  C(10)  .03
     !EXECUTE
     !CHANGE    Si(3,OCC) .667   Si(103,OCC)   .333
     !SUBTRACT  .25 FIRST(Y) UNTIL LAST
     !ADD       C(30,SERIAL) UNTIL LAST 100
     !TRANSFORM -1 0 0, 0 -1 0, 0 0 -1 FIRST UNTIL LAST
     !SELECT    TYPE NE PEAK
     !DELETE    S(14)
     !UEQUIV    C(16) C(23) UNTIL LAST
     !ANISO     Pb(1)
     !KEEP      C(1) C(3) C(5) C(7) UNTIL LAST
     !END
#
The directive EXECUTE forces immediate execution of preceeding commands. The
 directive CONTINUE is available for building long lines, and QUIT abandons
 the edit without saving the results. The original values are unchanged.

 

^^^^^^^^^^^^^^^^^^^^^^^^^^^
\Molax, \Regularise, \Aniso
^^^^^^^^^^^^^^^^^^^^^^^^^^^

These commands are used to examine the geometry of the model. They can
 also be used to force certain geometries onto the model. MOLAX computes
 best planes and lines (molecular axes), REGULARISE compares and
 regularises structures or structural fragments,
 and ANISO  helps with the analysis of the thermal
 parameters.

 

*************
#ZREFINEMENT#
*************

CRYSTALS was originally developed to perform difficult or complex
 refinements, and was subsequently modified to simplify the treatment of
 routine cases. There are seven components of a refinement strategy.


 

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Structure factor control list
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

 On slow computers or for large structures,
 the structure factor computation can be speeded up by disabling the
 contributions from parameters or data that have null or default values. These
 'switches' are in LIST 23, the structure factor control list.
The default values in this list are usually suitable.
 Some switches may be reset
 automatically by CRYSTALS. You will be told when this happens.
For disordered structures, you may need to inhibit special position
checking, or reduce the tolerance for atom matching.
 
::

  e.g.
      !\LIST 23
      !REFINE         SPECIAL=TEST      UPDATE=NO
      !END
or
      !\LIST 23
      !REFINE        TOLERANCE = .1
      !END
#
 

^^^^^^^^^^^^^^^^^^^^^
Refinement definition
^^^^^^^^^^^^^^^^^^^^^

Defining the parameters to be refined. This information is held separately
 from the atom coordinates, in LIST 12. This list also contains information
 about the matrix blocking, constrained parameters, riding parameters, rigid
 groups and other special processes.


The release version of CRYSTALS will refine about 5,000 atoms by large -block
 diagonal methods, or 1400 selected parameters full matrix. The parameters to
 be refined are specified in LIST 12. See the note above on atomic
 parameters and parameter names.
 
::

  e.g.
      !\LIST 12
      !FULL     X'S U[ISO]
      !END


      !\LIST 12
      !BLOCK SCALE  X'S U'S
      !END


      !\LIST 12
      !FULL     X'S
      !CONTINUE     FIRST(U'S) UNTIL C(30)
      !CONTINUE     H(1,U[ISO]) UNTIL LAST
      !END
#
The first example gives full matrix isotropic refinement, the second
 full matrix anisotropic refinement. The third is a mixed aniso-iso
 refinement.
 FULL always implies refinement of the over all scale factor.
 The matrix will be large, so you may need to
 extend the .DSC file if automatic extension is not enabled. See the
 sections on ADVANCED REFINEMENT and on CRYSINIT files.

 

^^^^^^^^^^^^^^^^^
Special positions
^^^^^^^^^^^^^^^^^

Treatment of atoms on special positions. This can be done automatically, by
 a switch in LIST 23, on demand by issuing \SPECIAL, or manually in LIST 12.

CRYSTALS automatically applies the constraints or restraints necessary for
 the treatment of atoms on special positions, and adjusts the site
 occupancy. Default actions are set in LIST 23, and if these are disabled
 they can be set on demand with \SPECIAL. The user needs only be concerned
 with partial occupancy due to disorder, etc.

 

^^^^^^^^^^^^^^^^^^^^^^^^
Treatment of reflections
^^^^^^^^^^^^^^^^^^^^^^^^

 Reflections may be included or excluded from computations
 depending on values of screens set in LIST 28. Relections are not actually
 deleted from the reflection list, but merely flagged.
 
::

 e.g.
      !\LIST 28
      !MINIMA RATIO=3.0
      !READ NOMISSION=2
      !OMIT 2 0 0
      !OMIT 0 2 2
      !END
#

 

^^^^^^^^^^^^^^^^^^^^^^^^^
Weighting the reflections 
^^^^^^^^^^^^^^^^^^^^^^^^^

 A large number of schemes are possible,  defined in LIST 4. Schemes are
available for F or Fsq refinement.

The default, unit, weights are suitable for initial refinement.
 
::

      !\LIST 4
      !END
#

 Once the
 model is fully parameterised (all atoms found) and more or less converged,
 alternative weights should be chosen to obtain the most realistic estimated
 standard deviations. The SCRIPT \SCRIPT WEIGHTS gives some help in the
 choice. Otherwise, for F refinement try
 
::

      !\LIST 4
      !SCHEME NUMBER = 14, NPARAM=3
      !END
      !\WEIGHT
      !END
      !\ANALYSE
      !END

#
For Fsq refinement, try
 
::

      !\LIST 4
      !SCHEME 16 NPARAM=3
      !PARAM .001 3.0 1.0
      !END
#
The ANALYSE command produces an analysis of residuals. The column headed
 <w*deltasq> should be more or less constant for suitable weights.

 

^^^^^^^^^^
Restraints
^^^^^^^^^^

Treatment of restraints. These are stored in LIST 16, and applied or
 not depending on a switch in LIST 23.
CRYSTALS offers many restraints. They are stored in symbolic form in
 LIST 16, and are converted to computable format by \LIST 26.
 
::

 e.g.
   !\LIST 16
   !DIST       1.39, .01 = C(10) TO C(11), C(10) TO C(15)
   !DIST       0.0 , .01 = MEAN  C(1) TO C(2), C(1) TO C(6)
   !PLANAR     C(101) UNTIL C(106)
   !VIBRATION  0.0 , .01 = MEAN  C(1) TO C(2), C(1) TO C(6)
   !SUM        Ca(1,OCC) FE(1,OCC) Al(1,OCC)
   !END
   !\CHECK
   !END
#
 The CHECK command produces a listing of the observed and calculated values
 for the restraints. The atom specifications can include symmetry
 indicators.
The distance and angle restraints using the mean value of the observed
 molecular parameters is especially valuable for imposing molecular symmetry
 without the user being required to know the target values.
 
::
 e.g. for a phenyl group bonded though C(1)
       !\LIST 16
       !DIST 0.0, .001 = MEAN C(1) to C(2), C(1) TO C(6)
       !DIST 0.0, .001 = MEAN C(2) to C(3), C(6) TO C(5)
       !DIST 0.0, .001 = MEAN C(3) to C(4), C(5) TO C(4)
       !ANGLE 0.0, .02 = MEAN C(1) to C(2) to C(3),
       !CONTINUE           C(1) to C(6) to C(5)
       !ANGLE 0.0, .02 = MEAN C(2) to C(3) to C(4),
       !CONTINUE           C(6) to C(5) to C(4)
       !END
#
 If there are several phenyl groups, all equivalent bonds can be added into
 the same mean.
 

^^^^^^^^^^^^^
Least Squares
^^^^^^^^^^^^^

Least squares are initiated once the preparations are completed. For large
 structures it is sensible to do the preparations interactively, and run the
 LS in batch. If refinement converges or diverges before the specified
 number of cycles, refinement is terminated. The user can always demand one
 cycle.
 
::

      !\SFLS
      !SCALE
      !REFINE
      !REFINE
      !CALCULATE
      !END
#
 

***********************
#ZSEEING THE STRUCTURE#
***********************

 

^^^^^^^^^^^^^^^^^^^^^^^
Listing the coordinates
^^^^^^^^^^^^^^^^^^^^^^^

The atomic parameters are kept in LIST 5. They can be displayed on the
 screen or printer file with:
 
::

      !\DISPLAY      low/medium/high
      !END
#
 

^^^^^^^^^^^^
Simple plots
^^^^^^^^^^^^

A join-the-dots diagram of all or part of the current structure can be
 displayed on  the line printer and text terminal with MOLAX.
 
::

     !\MOLAX
     !ATOM             FIRST UNTIL LAST
     !PLOT
     !EXECUTE
     !
     !ATOM             C(10) UNTIL C(15)  P(1)
     !PLOT
     !EXEC
     !END
#
These instructions produce a plot of the whole structure, and then of a
 phenyl group and its associated phosphorus. The directive EXECUTE forces
 the execution of the preceeding commands  without waiting for the END.

 

^^^^^^^^
Graphics
^^^^^^^^

The graphics program 'CAMERON' is integrated into CRYSTALS, and can be
 accessed on suitable terminals (VGA on PCs, TEKTRONIX 4010 on VAXs) directly.
 If the structure is modified in Cameron, it may be re-input to the CRYSTALS
 data-base. Cameron has its own user manual.
 
::

      !\CAMERON
      !END
                              (Commands, mouse or cursor actions to
                               control CAMERON)
                              END
      !\USE CAMERON.L5
#
 

*********************
#ZMOLECULAR GEOMETRY#
*********************

Details of the molecular geometry can be computed in CRYSTALS. Most
 calculations send a summary to the screen, and a detailed listing to the
 printer file. Some will also produce a .PCH file (fixed format ASCII) suitable
 for incorporation into publications in either tabular of 'cif' format.
 

^^^^^^^^^^^^^^^^^^^^
Distances and angles
^^^^^^^^^^^^^^^^^^^^

The user has a lot of fine control over the distance-angle routine, which
 should help minimise unwanted output. For many cases the default settings are
 suitable. A text file suitable for editing into documents may also be
 produced
 
::

      !\DISTANCE
      !END
#
 

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Best planes, lines and dihedral angles
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Planes, lines and the angles between them are computed with MOLAX (molecular
 axes). This routine also produces simple plots.
 
::

      !\MOLAX
      !ATOM FIRST UNTIL LAST
      !PLANE
      !EXEC
      !ATOM C(1) UNTIL C(6) P(1)
      !PLANE
      !EXEC
      !ATOM P(1) FE(1) P(2)
      !LINE
      !ATOM P(3) FE(1) C(17)
      !LINE
      !ANGLE 3 AND 4
      !END
#
This task computes the best plane through the whole structure, through a
 P-phenyl group, and lines through two groups of atoms. The corresponding
 vector (plane normal or line axis)
 is stored for each PLANE or LINE calculation. The ANGLE directive
 requests the angle between the 3rd and 4th vectors, i.e. the two lines.
 EXEC, as in EDIT, forces immediate execution of the preceeding directive.

 

^^^^^^^^^^^^^^
Torsion angles
^^^^^^^^^^^^^^

Torsion angles are computed with
 
::

      !\TORSION
      !ATOM C(1) C(2) C(3) C(4)
      !ATOM C(6) C(7) C(8) C(9) UNTIL C(11)
      !END
#
This computes one torsion atom in the first command, and 3 in the second.
 The output can be sent to a text file.

 

^^^^^^^^^^^^^^^^
Thermal analysis
^^^^^^^^^^^^^^^^

During the course of refinement, CRYSTALS keep a watch on the thermal
 parameters and issues warnings if they go too small or too aspherical.
 However, it is often instructive for the user to examine both the principal
 axes and the TLS molecular motion tensors, in
 association with a Cameron thermal ellipsoid plot.
 
::

      !\ANISO
      !ATOM FIRST UNTIL LAST
      !AXES
      !EXEC
      !ATOM C(1) UNTIL C(6) P(1)
      !TLS
      !END
#
These commands compute the principal axes of all the atoms, and then do a
 TLS analysis on the P-phenyl group. EXEC forces immediate execution of the
 preceeding commands.

 

***********************
#ZPUBLICATION LISTINGS#
***********************

Atomic coordinate and structure factor listings are organised to fit onto
 A4 paper or a continuous listing.
 Bond length, angle and torsion angle listings are a continuous
 column, since they will generally need editing. The listings include standard
 deviations, computed from the normal matrix. This is linked internally to
 LIST 5, therefore, LIST 5 MUST NOT BE MODIFIED in any way between the final
 least squares and the generation of publication listings.

 
::

      !\REFLECTION
      !END
      !\PARAMETERS
      !END
      !\DISTANCE
      !E.S.D YES
      !OUTPUT PUNCH=PUBLISH
      !END
      !\TORSION
      !PUBLICATION YES
      !ATOM C(1) C(2) C(3) C(4)
      !ATOM C(6) C(7) C(8) C(9) UNTIL C(11)
      !END
#
The output is in an ASCII file with, by default, the type .PCH.
  REFLECTIONS, PARAMETERS
 and DISTANCE have a wide range of parameters which can be set to control the
 type and format of the output. The SCRIPT \SCRIPT PUBLISH helps prepare
 tables for publication.
#

************
#ZCIF FILES#
************

The Crystallographic Information File data format (cif) is gaining popularity
 as a means of submitting numerical data for publication. With _I{Acta Cryst.}
 submission of a cif file with an article can speed up processing of the
 document by several weeks.
 Atomic parameters, bond lengths, angles and torsion angles can be
 out-put in 'cif' format, together with a list of the other data required by
 _I{Acta Cryst}. You are recommended to input a LIST 30 at the very start of an
 analysis, since this will be updated with various 'goodies' as the analysis
 proceeds.
 As above, LIST 5 MUST NOT BE MODIFIED in any way between the final
 least squares and the generation of publication listings.

 
::

      !\CIF
      !END
      !\PARAMETERS
      !COORDINATE PUNCH=CIF
      !END
      !\DISTANCE
      !E.S.D YES
      !OUTPUT PUNCH=CIF
      !END
      !\TORSION
      !PUBLICATION PUNCH=CIF
      !ATOM C(1) C(2) C(3) C(4)
      !ATOM C(6) C(7) C(8) C(9) UNTIL C(11)
      !END
#
The script \SCRIPT CIF or \SCRIPT PUBLISH helps with the preparation
of cif files.
 

****************
#ZDOCUMENTATION#
****************

The main documentation is the Reference Manual.
While CRYSTALS is running, the user can also get various types of
 information on-line.
 

^^^^^^^^^^
The Manual
^^^^^^^^^^

The Manual is voluminous but moderately complete and accurate. The
 chapters are organised to roughly follow the path of an analysis, but
 tables are appended to this guide as aide-memoires for commands and
 data lists.
 

^^^^^^^^^^^^
On-line HELP
^^^^^^^^^^^^

The on-line documentation consists of text files giving tips and
advice.
 
::

     !\HELP             HELP
 or
     !\HELP             topic
 or
     !\INDEX             INDEX
 or
     !\INDEX             topic
#

^^^^^^^^^^^^^^^
Command summary
^^^^^^^^^^^^^^^

CRYSTALS uses a master system-data-base containig the definitions of all
 COMMANDS  and LISTS. This can be interogated to get terse aide-memoires
 of COMMANDS and LISTS.

#D\COMMANDS#
This COMMAND should only be issued after any preceeding COMMANDS have
 executed to completion. Its format is:
 
::

     !\COMMANDS      commandname
 or
     !\COMMANDS      LIST      listnumber
#

#DQuery facility#

Once a COMMAND is  initiated, information about its directives and
 parameters can be obtained by starting a line with '?'. This facility will
 not work if an error has occured during the input of the current COMMAND.
 
::

      !\FOURIER
      !?
      !?MAP
      !?MAP            TYPE
      !MAP             TYPE=DIFF
      !END
#
In this example, the first ? produces a list of available directives, the
 second a list of parameters for MAP, and the third a list of permitted map
 types, and the default choice.

 

****************
#ZTHE DATA BASE#
****************

The data base is held in the binary file *.DSC, called 'the disk'. This
 file MUST NOT BE PRINTED. It will grow with use, and cannot be shortened.
 Instructions exist for recovering space within the disk. See the section
 DISK for details.

 

^^^^^^^^^^^^^^^^^
Index to the disk
^^^^^^^^^^^^^^^^^

The disk index can be examined with
 
::

      !\DISK
      !PRINT
          or
      !PRINT      DISK
      !END
#
 

^^^^^^^^^^^^^
Listing LISTs
^^^^^^^^^^^^^

The data in a CRYSTALS LIST can be examined with:
 
::

      !\SUMMARY LIST n
      !END
     Which sends a brief summary of LIST n to the terminal
 or
      !\PRINT n
      !END
     Which sends a detailed listing to the .LIS file.
#
 

^^^^^^^^^^^^^^^^^^^^^^^^^
Recovering previous lists
^^^^^^^^^^^^^^^^^^^^^^^^^

Whenever a LIST is stored in the disk, its serial number is incremented.
 In general, previous lists are over written, but new parameters lists,
 LIST 5, are always created. Previous versions can be made current or
 active by 'resetting' to them. This is done either by giving their
 absolute serial number, or a relative number.

 
::

      !\DISK
      !RESET       5       0      -1
      !RESET       5      42
      !END
#
The first reset steps back one to the previous parameter list. The second
 reset (which of course supersedes the first), makes LIST 5 serial number 42
 the current active version.

 

^^^^^^^^^^^^^^^^^^^^^
Purging the disk file
^^^^^^^^^^^^^^^^^^^^^

The disc file slowly grows as lists are accumulated in it.
 Non-currently
 active lists can be eliminated with the PURGE instruction. Valuable
 intermediate versions of lists, such as a good trial structure before an
 experimental refinement, can retained by setting a flag.

 
::

      !\DISK
      !RETAIN 5      17
      !END
      !
      !\PURGE
      !END
#

 

************************
#ZTAILORING THE PROGRAM#
************************

The user has some control over the run-time aspects of the program.
  Commands put into a CRYSINIT file are
 automatically obeyed each time CRYSTALS is started. Under VMS this file
is in the users root directory, under DOS it is in the current working 
directory.
 

^^^^^^^^^^^^^^^^^^^^
General Instructions
^^^^^^^^^^^^^^^^^^^^

 
::

\TITLE                       Any text for a title
\SET UEQUIV type             Geometric or arithmetric mean
\SET PAUSE value             Pause interval after each 24 lines of OP
\USE CONTROL                 Skip the SCRIPT startup mode
\SET GENERATE state          Generate filename 'extensions'
\SET LOG state               Control the logging of input
\SET MONITOR state           Control monitoring of input
\SET PAGE length
\SET TERMINAL device         Set VT52 or VT100 for SCRIPTS
\SET COMMUNICATION speed     Set relative line speed
\SET TIMING state            Enable timing messages
\SET LIST   state            Messages about disc transfers
\SET WATCH number            Select lists to watch
\SET PRINTER state           On or Off
#
 

^^^^^^^^^^^^^^^
File processing
^^^^^^^^^^^^^^^

When CRYSTALS is running, instructions stored in a data file can be executed
 with:
 
::

             !\USE  filename
#
To find out what is in a file without obeying it, issue:
 
::

            !\TYPE  filename
#
CRYSTALS automatically hooks in suitable files or devices to input and output
 channels. These can be changed while the program is running. For example, the
 listings can be directed to a new file, so that the previous file can be
 printed without stopping CRYSTALS. Output can also be directed to specially
 named files, or devices. The command used is:

\RELEASE devicename filename
Permitted devices include:
 
::

      MONITOR   The screen for online work, otherwise the .MON file (not PCs)
      PRINTER   The main listing file
      LOG   The copy (log) of all input
      PUNCH A card image file
#
The filenames can be any system permitted file name.
 If omitted, a new file with the  default name is opened, possibly
 over-writing the previous file.
 Special devices are often available
 
::

      :TT   The terminal screen (not PCs)
      :LP   The line printer itself
      :NL   The null device (dustbin)

 e.g.
    !\RELEASE PRINTER LP:
        sends output directly to the printer
    !\RELEASE LOG
        releases the log file, which could then
        be edited and used as input
    !\RELEASE PRINTER NL:
        sends the full listing to the dustbin.
#
 

^^^^^^^^^^^^^^^^^^^^^^^^^
DOS file name limitaions.
^^^^^^^^^^^^^^^^^^^^^^^^^

Under VMS file generation numbers prevent accidental over-writing of
 previous output. Under DOS and UNIX this facility is not available, nor
 is it always permitted to switch output to and from the screen or printer
 directly. The command
 
::

      !\SET GENERATE ON
#
 causes the second part of the file names to be modified to help reduce this
 problem. This command could be put in the CRYSINIT file.
 Under DOS, all files for a given structure gave the specific part
 set to CRFILE, and the extension identifies the type of file.
 

^^^^^^^^^^^^^^^^^^^^^^^^^
Automatic Disc extension.
^^^^^^^^^^^^^^^^^^^^^^^^^

If the .DSC file becomes full, CRYSTALS makes an attempt to extend it. The
 number of attempts and the increment are set by the program installer. The
 user can over -ride the defaults. See the section \DISK. The
 following commands permits very substantial disk  extensions.
 
::

      !\DISK
      !EXTEND SIZE=10 TRIES=100
      !END
#
 These commands could be put in the CRYSINIT file.
 

^^^^^^^^^^^^^^^
CRYSINIT files.
^^^^^^^^^^^^^^^

Their function is similar to a LOGIN.COM or AUTOEXEC.BAT file, and they
 contain commands the user
 always wants executing when CRYSTALS starts. The special instruction
 \USE CONTROL by-passes SCRIPT mode startup.

 
::

      !\ A CRYSINIT file to minimise output and pass directly
      !\ into command mode. Disc extensions are set large.
      !\DISK
      !EXTEND FREE=100 SIZE=10 TRIES=100
      !END
      !\SET TIMING OFF
      !\SET WATCH 5
      !\SET LISTS WRITE
      !\SET SRQ OFF
      !\SET SPEED FAST
      !\USE CONTROL
#
The file CRYSTALS.SRT, usually in the directory CRIMAGES, is a master
CRYSINIT file obeyed every time CRYSTALS starts. You may edit this, but
take care.

^^^^^^^^^^^^^^^^^^^^^
Environment Variables
^^^^^^^^^^^^^^^^^^^^^

 Enviroment variables (VMS Logicals) point to important directories or
folders.

::

      CRDIR  The directory where CRYSTALS expects to find or put files.
      CRIMAGES The directory containing CRYSTALS
      CRSCP The directory containing the SCRIPTS
#
 

***********************
#ZADVANCED REFINEMENTS#
***********************

CRYSTALS was originally conceived as a refinement program, and continuing
 developments have maintained it as one of the best. The following examples
 illustrate some common situations. Remember that  constraints are set in LIST
 12, and restraints in LIST 16. They can be combined in almost any resonable
 fashion. An important principle to remember in building constraints is
 that it is _b{not parameters which are refined, but _i{sfifts in
 parameters. Parameters cn be linked to have the same shift, even if the
 staring values are (and will remain) different.
 

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Mixed isotropic and anisotropic refinement
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

 
::

      !\LIST 12
      !BLOCK      SCALE X'S
      !CONTINUE   C(1,U'S) UNTIL O(42)
      !CONTINUE   P(1,U[ISO]) UNTIL F(6)
      !END
      !\LIST 22
      !END
#
These commands define a single matrix block containing the overall
 scale factor, the positions for
 all atoms, the anisotropic temperature factors for the first group of
 atoms, and isotropic for the second. The command LIST 22 converts the
 symbolic LIST 12 into an internal format, and  checks for
 syntactic consistency. It should always be issued if LIST 12 is complex, so
 that potential errors can be detected before least squares are started. It
 also informs the user of the space
 which will be needed for the matrix in the .DSC file. It is generated
 internally if the user forgets.

 

^^^^^^^^^^^^^^^^
Large structures
^^^^^^^^^^^^^^^^

The user can refine different groups of parameters is  sucessive refinement
 cycles, by issuing a new LIST 12 command between each cycle. It is also
 possible to define a multi block refinement, a very effective method if the
 blocks are carefully chosen. Each block should contain correlated parameters.
 As a rough guide, the following groups of parameters are in general
 highly correlated and should be refined in the same block if possible :
 
::

 1.  Temperature factors, scale factors, the extinction  parameter,
     the polarity parameter and the enantiopole parameter.
 2.  Coordinates of bonded atoms.
 3.  Non-orthogonal coordinates of the same atom.
 4.  U(11), U(22) and U(33) of the same atom.
#
If it is necessary to split the temperature factors and scale
 factor into different blocks, their interactions must not be neglected
 but be allowed for by using a 'dummy overall isotropic temperature
 factor'.
 In this case, the scale factor and the dummy temperature factor
 must be put into a block of order 2 by themselves, and the program
 will make the appropriate corrections to all the temperature factors.

 
::

      !\LIST 12
      !BLOCK X'S
      !BLOCK U'S SCALE
      !END
#
This defines a two block matrix. The scale factor should be with the
 temperature factors.

 
::

      !\LIST 12
      !BLOCK C(1,X'S,U'S) UNTIL O(36)
      !BLOCK C(37,X'S,U'S) UNTIL N(61)
      !BLOCK SCALE DU[ISO]
      !END
#
This defines a three block matrix for a structure containing two
 uncorrelated (i.e. not related by pseudo -symmetry) fragments or molecules.
 

^^^^^^^^^^^^^^^
Tied parameters
^^^^^^^^^^^^^^^

Parameters can be tied individually, on a per atom basis, or for whole
 groups of atoms.

 
::

      !\LIST 12
      !FULL X'S
      !EQUIVALENCE C(10,OCC) CL(11,OCC) CL(12,OCC)
      !RIDE        C(17,X'S) H(171,X'S) H(172,X'S) H(173,X'S)
      !LINK        C(1,X'S,U[ISO])   UNTIL C(13)   AND
      !CONTINUE    C(101,X'S,U[ISO]) UNTIL C(113)
      !EQUIV       K(1,OCC) NA(1,OCC)
      !WEIGHT   -1 NA(1,OCC)
#
The first command IMPLIES the positions of all atoms. Subsequent commands
 EXPLICITLY refer to parameters, and over ride the implicit definitions. The
 second command
 ties the occupancies of the atoms in dichloromethane. The
 third defines a methyl group with riding hydrogen positions. The fourth,
 which continues onto the next line, ties all the parameters in one group with the
 corresponding parameters in the second. The final equivalence ties the two
 occupancies, but the weight card negates the shift applied to sodium. The
 total of their occupancies is therefore constant.

 

^^^^^^^^^^^^^^^^^^^^^^^
Rigid groups refinement
^^^^^^^^^^^^^^^^^^^^^^^

Initial refinements of large or disordered structures are best done by
 defining groups of atoms with well known geometries as rigid groups. The
 geometry of the groups should first be idealised with \REGULAR. Each atom
 may not occur in more than one group, though restraints can be applied to
 any atoms, in or out of groups.
 
::

      \LIST 12
      FULL FE(1,X'S) P(1,X'S) CL(1,X'S) CL(2,X'S)
      CONTINUE U'S
      GROUP C(1) UNTIL C(5)
      RIDE  C(1,U'S) UNTIL C(5)
      GROUP C(6) UNTIL C(11)
      RIDE  C(6,U'S) UNTIL C(11)
      GROUP C(12) UNTIL C(17)
      RIDE  C(12,U'S) UNTIL C(17)
      GROUP C(18) UNTIL C(23)
      RIDE  C(18,U'S) UNTIL C(23)
      END
#
Four groups are refined together with 4 other atom positions and all
 the anisotropic temperature factors. Each GROUP is given linked
 anisotropic temperature shifts. They do not have to have the same
 starting temperature factor values.

 

^^^^^^^^^^^^^^^
Pseudo-symmetry 
^^^^^^^^^^^^^^^

When a structure contains whole groups of highly correlated coordinates,
 for example when a symmetry operator is lowered by generating atoms and
 removing a symmetry operator, the refinement will be unstable. This can often
 be controlled with:
 
::

      \LIST 16
      LIMIT .1 X
      LIMIT .1 Y
      LIMIT .1 Z
      END
      \LIST 12
      FULL
      COMBINE C(1,X'S) UNTIL C(23)  AND C(101,X'S) UNTIL C(123)
      END
#
The LIMIT restraints prevent wild divergence on the first round of least
 squares, and the COMBINE  card combines the parameters from the original
 fragment with those from the generated fragment - see the reference
 Manual.
#

^^^^^^^^^^^^^^^^^^^^^^
Absolute Configuration
^^^^^^^^^^^^^^^^^^^^^^

CRYSTALS permits the refinement of either the Rogers _I{eta or the
Flack _I{x parameter. The Flack parameter is more stable, and has a
physical interpretation throughout its permitted range (0 to 1). Its
refinement seems to be robust against DIFABS treatment, but does require
an extinction correction to be applied if necessary, and may also
require the inclusion of very weak refections. Note that these are often
systematically over-estimated. The listing file for a cycle of
refinement including the Flack parameter contains a list of 'enantiomer
sensitive' reflections. F+ is Fcalc for the current model, F- for the
inverse, and Fo is the observed value. Fo should tend to F+ or F-. If it
is consistently stronger or weaker, suspect the data collection.
If the material is expected to be chirally pure, once the hand has
been determined _I{x should be set to 0.0, and enantio removed from LIST
12 and turned off in LIST 23. If the material is twinned, enantio must
remain in the refinement.
#
==================
Interpretation of the Flack Parameter#
==================


::

      Flack      e.s.d      interpretation
     ~0.0         <.05      Hand is correct
     ~1.0         <.05      Hand need inverting
     ~0.5         <.05      Well characterised twin.
     ~0.0         >0.5      Hand undertermined
     ~1.0         >0.5      Hand undertermined
     ~0.5         >0.5      Twinning undertermined
#

^^^^^^^^^^^^^^^^^^^^^^^^^^^
Enantiomorphic Space Groups
^^^^^^^^^^^^^^^^^^^^^^^^^^^

For most space groups the hand of the structure can be inverted simply
by inverting the sign of all the atomic coordinates. For some, the space
group must also be changed, possible with a change in origin.

::


      P 61      -  P 65                   P 41       -  P 43
      P 62      -  P 64                   P 41 2 2   -  P 43 2 2
      P 61 2 2  -  P 65 2 2               P 41 21 1  -  P 43 21 1
      P 62 2 2  -  P 64 2 2               P 41 3 2   -  P 43 3 2

                        P 31      -  P 32
                        P 31 1 2  -  P 32 1 2
                        P 31 2 1  -  P 32 2 1
#

 

**********
#ZSCRIPTS#
**********

The CRYSTALS SCRIPT environment is similar to the menus found in many
 modern PC programs. Superficially it is rather like a command tree, with
 a root, branches, twigs and finally leaves which perform discrete
 crystallographic or data management operations. This sort of structure is
 adopted so that related operations may be grouped together, making them
 easy to locate. However, a basic operation may be strongly related to
 several groups of operations, and must therefore appear on the menu for
 each of these groups. The same leaf can be found on several different
 branches! In addition, it is sometimes useful to execute a 'leaf' quite
 out of its normal context.
This structured flexibility is provided by the SCRIPT processor,
 and the CRYSTALS program is issued with a sample set of scripts. These
 have developed to meet some of the needs of Oxford students, and so they
 may well not be suitable in other environments. However, the scripts
 themselves are only plain text data files, and users are free to modify
 them in any way they wish, and add new ones. It is not possible for a
 script to corrupt the CRYSTALS program.

 

^^^^^^^^^^^^^^^^^^^^^^^^^
Escaping from SCRIPT mode
^^^^^^^^^^^^^^^^^^^^^^^^^

Control can be passed to the command mode at any time by replying DIRECT
 (in full) to any SCRIPT question. The users is passed to the CRYSTALS prompt
 '!'.
 

^^^^^^^^^^^^^^^^^^^^^
Entering SCRIPT  mode
^^^^^^^^^^^^^^^^^^^^^

Control can be passed to  script mode by issuing the CRYSTALS command.
 
::

          \SCRIPT    scriptname
#
where scriptname is the name of the script required. The master script is
 called CONTROL, but entry can be to any branch of the tree directly.
 Script mode is entered  automatically by a call '\SCRIPT CONTROL' in the
 CRYSTALS startup file 'CRYSTALS.SRT', but can be deactivated by a call
 '\USE CONTROL' in the users CRYSINIT.DAT file.
 
::
 e.g.
        \SCRIPT  DATA
#
passes control to the branch concerned with list input, examination
 and editing. The help facility \HELP SCRIPTS Lists the available scripts
 on-line.

Numerical data for a structure is stored in a CRYSTALS data-base,
 filename.DSC. This accumulates information as an analysis progresses.
 In this file, data is grouped by function into 'LISTS'. Most of the
 scripts refer to data by its type (e.g. CELL parameters), but
 occasionally they refer by LIST number (in this case, LIST 1),
 and many CRYSTALS output messages
 refer to lists. A table of the lists and the data they contain is
 appended to this document.
#

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Principal Menued Scripts - Feb 1997
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

The SCRIPT CONTROL is the master controlling script. Most of the
sub-scripts called from it are also menued.
==================
CONTROL.SCP#
==================


::

  This is the master control SCRIPT
     HELP          Display this help text
     DATA          Input, examination and modification of data LISTS
     SCRIPT        Execute the named SCRIPT immediately
     NEWSTART      Starting a new structure analysis
     STRUCTURE     Solving a structure or inputting a solution
     MAPS          Computing and using Fourier maps
     LEASTSQ       Setting up and performing least squares refinement
     GEOMETRY      Computing molecular parameters
     PUBLISH       Preparation of tables
     ROUTINE       A script for routine structures
     GENERAL       Information about CRYSTALS
     FINISH        Exit from CRYSTALS
     DIRECT        Go to CRYSTALS direct command input
#
==================
DATA.SCP#
==================


::

   This script assists in the examination, modification
   and input of CRYSTALS LISTS
     BACK        End this script
     HELP        Display this help text
     INDEX       List the possible CRYSTALS LISTS
     INPUT       Input new lists
     LOOK        Print the contents of the current LISTS
     MODIFY      Modify the contents of some lists
     PERHYDRO    Perhydrogenate the carbon atoms
     DISK        Access the CRYSTALS DSC file
     USE         Single step though a data file
     DIRECT      Go to CRYSTALS direct command input
#
==================
NEWSTART.SCP#
==================


::

  This script helps you get in the basic data for a new structure
     BACK        End this script
     HELP        Display this help text
     INCAD4      Input CAD4 data from the RC85 or RC93 program
     DIPIN       Input data from DIP2000
     QUICKSTART  Simplified startup using reflections in SHELX format
     Y290        Input format for Hilger & Watts Y290 'Nottingham' format
     INITIAL     Generalised startup for non-RC85 data formats
     DATA        General data input script
     MODIFY      Modify existing lists
     LOOK        Examine existing lists
     DIRECT      Return to command mode
#
==================
STRUCTUR.SCP#
==================


::

      BACK        Finish with this facility
      HELP        Display this help text
      INEMAP      Input model found by Direct Methods run
      PATTERSON   Prepare data for, or compute a Patterson map
      SHELXS      Prepare data for SHELXS86
      SIR88       Prepare data for SIR88
      SIR92       Prepare data for SIR92
      PLOT        A join-the-dots plot on screen and printer
#
==================
MAPS.SCP#
==================


::

      BACK        Finish with this facility
      HELP        Display this help text
      INEMAP      Input the results of a Direct methods run
      AUTO        A cyclic procedure for Fourier refinement
      GUIDE       A SCRIPT to guide you through Fourier calculations
      SF          Compute structure factors and phases
      FOURIER     Compute Fourier map
      CONVERT     Convert peaks list to atoms list
      COLLECT     Collect atoms and peaks together
      REGROUP     Reorder atoms to form molecules
      PLOT        A join the dots plot on screen and printer
      EDIT        Delete or rename groups of atoms and peaks
      DISTANCE    Compute interatomic distances.
      SLANT       Compute a general Fourier section
      SECTION     Define the asymmetric part of the cell
      RFACTOR     Show the current R factor
      CONTOUR     Produce contouring files
      DIRECT      Go direct to command mode
#
==================
LEASTSQ.SCP#
==================


::

   The SCRIPT to help set up refinement jobs.
      BACK        End this script
      HELP        Display this help text
      AUTO        Automatic choice of variables
      VARIABLES   Define the variables to be refined
      SFCONTROL   Modifications applied to structure factor calculation
      SCALE       Compute structure factors/ scale factor
      CYCLE       Perform refinement cycles
      SIXCYCLE    Perform six unconditional refinement cycles
      RESTRAINTS  Define restraints
      ANALYSE     Produce analysis of residuals
      CHECK       Check that the matrix is properly defined
      WEIGHTS     Optimise the reflection weighting.
      DIFABS      Run the empirical absorption correction
      DISK        Examine the disk file
      RFACTOR     Show the current R factor
      PLOT        Show the current structure on the screen
      EXCHANGE    Exchange results with anothe computer
      DIRECT      Go to CRYSTALS direct command input.
#
==================
GEOMETRY.SCP#
==================


::

   The SCRIPT to help produce tables for publication
      BACK        End this script
      HELP        Display this help text
      LOOK        List the contents of the active lists
      DISK        Examine the disk file
      DISTANCE    Compute distances and angles
      PLOT        Join-the-dots plots on the vdu
      PLANE       Best plane and best line computations
      TORSION     Compute torsion angles
      TLS         Analyse rigid body thermal motion
      AXES        Compute principal axes of temperature factors
      DIRECT      Go to CRYSTALS direct command input.
#
==================
PUBLISH.SCP#
==================


::

   The SCRIPT to help produce tables for publication
   NOTE that under some operating systems, the output from successive
   entries to this SCRIPT will overwrite previous output.
      BACK        End this script
      HELP        Display this help text
      XYZ         Coordinate listing
      ANISO       Temperature factor listing
      REFLECTIONS Reflection listing
      DISTANCES   Distance-angle listing
      SUMMARY     A summary of all data stored
      ANALYSE     A full analysis of residuals
      GEOMETRY    The SCRIPT for evaluating molecular parameters.
      CIF         Prepare a 'cif' format paper submission file
      ARCHIVE     A SCRIPT to save the best of the goodies.
      DIRECT      Go to CRYSTALS direct command input.
#
==================
GENERAL.SCP#
==================


::

   This script gives general information about SCRIPTS and CRYSTALS.
      BACK        End this script
      HELP        Display this help text
      VERBOSE     Switch the verbose text display on/off
      PURGE       Purge the .dsc file of old data.
      CRYSINIT    A brief description of CRYSINIT.DAT
      SCRIPTS     A brief description of SCRIPTS
      CRYSTALS    The CRYSTALS HELP system
      TERMINAL    Lets you tell CRYSTALS your terminal type
      TYPE        Displaying a file on the terminal
      VERIFY      Enable/disable display of SCRIPT execution
      QUESTIONS   Format of SCRIPT questions
      DIRECT      Go to CRYSTALS direct command input.
#

^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Available Scripts - Feb 1997
^^^^^^^^^^^^^^^^^^^^^^^^^^^^


::

AFOUR      ANALYSE    ARCHIVE    AUTO12     AXES       BATCHLSQ
CADQUICK   CADSLOW    CHECK      CIF        COLLECT    COMMANDS
CONTOUR    CONTROL    CRYSHELP   CRYSINIT   DATA       DATRED
DIFABS     DIPIN      DIRECT     DISK       DISTANCE   EDLIST1
EDLIST12   EDLIST16   EDLIST29   EDLIST5    ELEMENTS   EXCHANGE
EXPORT     FGUIDE     FINDH      FINISH     FOPTWT     FOURIER
FSQWT      GENERAL    GEOMETRY   GETEXP     IMPORT     INATOMS
INBASICS   INCAD4     INCOMP     INEMAP     INEMAP01   INITIAL
INLIST1    INLIST12   INLIST13   INLIST14   INLIST16   INLIST2
INLIST23   INLIST28   INLIST29   INLIST3    INLIST30   INLIST31
INLIST5    INLIST6    INPUT      INRC93     INSHELXS   INSPACE
INXYZ      INY290     LEASTSQ    LIST1      LIST12     LIST13
LIST16     LIST2      LIST23     LIST30     LIST31     LOOK
MAPS       MODEL      MODIFY     MULTAN     NEWSTART   NFOUR
NULL       PARTIAL    PATTERSN   PEAKS      PERHYDRO   PHEN16
PLANE      PLOT       PRINIT     PRRESET    PUBANISO   PUBDIST
PUBLISH    PUBREFL    PUBXYZ     QUESTION   QUICKST    REFINE
REGROUP    RELEASE    RENAME     RFACTOR    ROUTINE    SCALE
SCRIPT     SECTION    SFLS       SHELXS     SIR        SIR88
SIR92      SIXCYCLE   SLANT      SNOOPI     SORT       STRUCTUR
TERMINAL   TEXT       TIDYUP     TLS        TODOS      TORSION
TPP16      TYPE       USE        VALIDATE   VERIFY     WEIGHTS
#
#

******************************
#ZDATA LISTS and INSTRUCTIONS#
******************************
 

^^^^^^^^^^^^^^^
Available LISTS
^^^^^^^^^^^^^^^

 
::

    Lists marked * cannot be input by the User
    Lists marked \ are not currently available

   List   Type of data
  number

     1    Cell parameters
     2    Unit cell symmetry
     3    Atomic scattering factors
     4    Weighting parameters
     5    Atomic parameters
     6    Reflection data
     7\   Reflection data not used for refinement
    10*   Peak coordinates from Fourier
    11    Least squares matrix
    12    Refinement directives
    13    Crystal and collection data
    14    Fourier directives
    16    General Restraint instructions
    17    Special Restraint instructions
    22    Refinement directives in internal format
    23    Structure factor control list
    24*   Least squares shift list
    25    Twin component operators
    26*   Constraints in internal format
    27    Diffractometer scales
    28    Reflection condition list
    29    Contents of asymmetric unit and
                       elemental properties
    31    Cell parameter E.S.D.'s
    33*   Internal - Refinement control
#
 

^^^^^^^^^^^^^^^^^^^^^^
Available Instructions
^^^^^^^^^^^^^^^^^^^^^^

 
::

General system instructions.
        \FINISH       \ text     \TITLE        \COMMANDS
        \HIDE         \SHOW      \LOG          \USE
        \PAUSE        \TYPE      \MANUAL       \DISK
        \PURGE        \RELEASE   \SUMMARY      \FOREIGN
        \PRINT        \PUNCH

Initial data input
        \SPACEGROUP  \COMPOSITION \QUICKSTART

Reflection handling
        \HKLI         \LP        \SYSTEMATIC   \SORT
        \MERGE        \REORDER   \REFLECTIONS

Atomic and structural parameters
        \EDIT         \CONVERT   \HYDROGENS    \REGULARISE
        \COLLECT      \REGROUP   \PERHYDRO     \DISPLAY

Structure factors and refinement
        \SFLS         \LIST 22   \LIST 26      \SPECIAL
        \CHECK        \CLEAR     \ANALYSE      \WEIGHT
        \DIFABS

Fourier maps
        \FOURIER      \SLANT     \PEAKS

Analysis of results
        \AXES         \DISTANCES \MOLAX        \TORSION
        \PARAMETERS   \ANISO     \CIFOUT       \CAMERON
#

^^^^^^^^^^^^^^^^
General Commands
^^^^^^^^^^^^^^^^

==================
Immediate (System) Commands#
==================


::

 \FINISH
 \ ..... COMMENTS ....
 \TITLE ..... A title to be printed .....
 \SPAWN      DCL command
 \$      DCL command
 \COMMANDS   instruction
 \SET
      EXPORT          on/off
      FILECASE        lower/mixed/upper
      GENERATE        on/off
      LISTS           none/read/write/both
      LOG             on/off
      MAPS            on/off
      MESSAGE         on/off
      MONITOR         on/off
      OPENMESSAGE     on/off
      PAGE            'length'
      PAUSE           'time'
      PRINTER         on/off
      COMMUNUCATION   slow/fast
      SRQ             on/off
      TERMINAL        unknown/vt52/vt100/vga
      TIMING          on/off
      UEQUIV          arihtmetic/geometric
      WATCH           'number'

 \USE      source
 \PAUSE    interval
 \TYPE     'filename'
 \RELEASE  devicename filename
 \MANUAL   'name'
 \HELP     'topic'
 \OPEN     devicename filename
 \SCRIPT   filename
 $ DCLcommand
#
==================
Summary of Contents of a List#
==================


::

 \SUMMARY OF= TYPE= LEVEL=
#
==================
\DISK - Disk management#
==================

 
::

 \DISK
 PRINT INDEX=
 MARKERROR LIST= SERIAL= RELATIVE= ACTION=
 RETAIN LIST= SERIAL= RELATIVE= ACTION=
 DELETE LIST= SERIAL= RELATIVE= ACTION=
 RESET LIST= SERIAL= RELATIVE=
 USAGE LIST= SERIAL= RELATIVE= FLAG=
 EXTEND RECORDS= FREE= TRIES= SIZE=
#
==================
\PURGE - Deletion of Old Versions of Lists#
==================

 
::

 \PURGE FILE= INITIALSIZE= LOG=
 END
#
==================
\CLEAR - Creation of Default Lists#
==================

 
::

 \CLEAR  LIST=
 END
#
==================
\FOREIGN - Foreign Program Links#
==================

 
::

 \FOREIGN PROGRAM= MODE=
 END
#

^^^^^^^^^^^^^^^^^^
Initial Data Input
^^^^^^^^^^^^^^^^^^

==================
\QUICKSTART - Abbreviated startup command#
==================

 
::

 \QUICKSTART
 SPACEGROUP symbol=
 CONTENTS formula=
 FILE name=
 FORMAT expression=
 DATA wavelength= reflections= ratio=
 CELL  a= b= c= alpha= beta= gamma=
 END
#
==================
\LIST 1 - Cell Parameters#
==================

 
::

 \LIST 1
 REAL a= b= c= alpha= beta= gamma=
 END
#
==================
\LIST 31 - Unit Cell Parameter Errors#
==================

 
::

 \LIST 31
 AMULT value=
 MATRIX v(11)= v(12)= . . v(16)= v(22)= . . v(66)=
 END
#
==================
\SPACE GROUP - Space Group input#
==================

 
::

 \SPACEGROUP
  SYMBOL expression=
  AXIS unique=
 END
#
==================
\LIST 2 - Symmetry Data#
==================

 
::

 \LIST 2
 CELL nsymmetries=  lattice=  centric=
 SYMMETRY  x=  y=  z=
 SPACEGROUP lattice= a-axis= b-axis= c-axis=
 CLASS name=
 END
#
==================
\COMPOSITION - Input of molecular composition#
==================

 
::

 \COMPOSITION
 CONTENTS formula=
 SCATTERING file=
 PROPERTIES file=
 END
#
==================
\LIST 3 - Atomic Scattering Factors#
==================

 
::

 \LIST 3
 READ  nscatterers=
 SCATTERING type= f'= f''= a(1)= b(1)= a(2)= . . . b(4)= c=
 END
#
==================
\LIST 13 - Crystal and Data Collection Details#
==================

 
::

 \LIST 13
 CRYSTAL friedelpairs= twinned= spread=
 DIFFRACTION geometry= radiation=
 CONDITIONS wavelength= theta(1)= theta(2)= constants . .
 MATRIX r(1)= r(2)= r(3)= . . . r(9)=
 TWO h= k= l= theta= omega= chi= phi= kappa= psi=
 THREE h= k= l= theta= omega= chi= phi= kappa= psi=
 REAL components= h= k= l= angles=
 RECIPROCAL components= h= k= l= angles=
 AXIS h= k= l=
#
==================
\LIST 29 - Contents of the Asymmetric Unit#
==================

 
::

 \LIST 29
 READ  nelement=
 ELEMENT  type=  covalent=  vanderwaals= ionic= number= mua= weight=#
 END
#
==================
\LIST 30 - General Crystallographic Data#
==================

 
::

 \LIST 30
 DATRED     nrefmes= nrefmerg= rmerge= nreffried= rmergfried=
 CONDITIONS minsize= medsize= maxsize= norient=
 CONTINUE   thorientmin= thorientmax= temperature= standards= decay= scanmode=
 REFINEMENT r= rw= nparam= maxparam= s= delrhomin= delrhomax=
 CONTINUE   rmsshift= nrefused= fminfunc= restminfunc= totalminfunc= coefficient=
 INDEXRANGE hmin= hmax= kmin= kmax= lmin= lmax= thetamin= thetamax=
 ABSORPTION psimin= psimax= thetamin= thetamax= empmin= empmax=
 CONTINUE   difabsmin= difabsmax= abstype=
 GENERAL    dobs= dcalc= f000= mu= molwt= flack= esd=
 COLOUR
 SHAPE
 END
#

^^^^^^^^^^^^^^^^^^^^^
Reflection Data Input
^^^^^^^^^^^^^^^^^^^^^

==================
\LIST 6 - Simple input of F or Fsq#
==================

 
::

 \LIST 6
 READ f's=
 FORMAT expression=
 END
#
==================
\LIST 6 - Advanced input of F or Fsq#
==================

 
::

 \LIST 6
 READ ncoefficient= type= f's= ngroup= unit= check=
 INPUT coefficient(1)= coefficient(2)= .  .
 STORE ncoefficient= medium= append=
 OUTPUT coefficient(1)= coefficient(2)=  .  .
 FORMAT expression=
 MULTIPLIERS value=
 END
#
==================
\HKLI - Intensity Data#
==================

 
::

 \HKLI
 READ ncoefficient= type= f's= ngroup= unit= check=
 INPUT coefficient(1)= coefficient(2)= .  .
 STORE ncoefficient= medium= append=
 OUTPUT coefficient(1)= coefficient(2)=  .  .
 FORMAT expression=
 CORRECTIONS nscale= nfactor=
 FACTORS coefficient(1)= coefficient(2)=  .  .
 ABSORPTION print= phi= theta= tube= plate=
 PHI nphivalues= nphicurves=
 PHIVALUES phi= .........
 PHIHKLI h= k= l= i[max]=
 PHICURVE i= .........
 THETA nthetavalues=
 THETAVALUES theta=
 THETACURVE correcton= ........
 TUBE nothing omega= chi= phi= kappa= mu=a[max]=
 PLATE nothing omega= chi= phi= kappa= mu=a[max]=
 END
#
==================
\LIST 27 - Intensity Decay Curves#
==================

 
::

 \LIST 27
 READ nscale=
 SCALE scalenumber= rawscale= smoothscale= serial=
 END
#
==================
\LP - Data Reduction#
==================

 
::

 \LP
 STORE medium= f's=
 END
#
==================
\SYSTEMATIC - Systematic absence removal#
==================

 
::

 \SYSTEMATIC
 STORE medium= f's= newindices=
 END
#
==================
\SORT - Sorting the reflection data#
==================

 
::

 \SORT
 STORE medium=
 END
#
==================
\MERGE - Merging equivalent reflections#
==================

 
::

 \MERGE
 STORE medium=
 REFLECTIONS njcode= list= level= f's=
 JCODE number= value=
 REJECT ratio= sigma=
 WEIGHT scheme= nparameters= ncycle=
 PARAMETERS p .....
 END
#

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Atomic and Structural Parameters
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

==================
\LIST 5 - Atoms and other Parameters#
==================

 
::

 \LIST 5
 OVERALL scale= du[iso]= ou[iso]= polarity= enantio= extparam=
 READ natom= nlayer= nelement= nbatch=
 ATOM type= serial= occ= u[iso]= x= y= z= u[11]= ....u[12]=
 INDEX p= q= r= s= absolute=
 LAYERS scale=
 ELEMENTS scale=
 BATCH scale=
#
==================
\EDIT - Editing structural parameters#
==================

 
::

 \EDIT inputlist= outputlist=
 EXECUTE
 SAVE
 QUIT
 MONITOR level
 LIST level
 DELETE  atom specifications  .  .
 ATOM type= serial= occ= u[iso]= x= y= z= u11= ..
 CREATE z atom-specification  ...
 SPLIT z atom-specification ...
 CENTROID z atom-specification ...
 KEEP  z atom-specifications ...
 AFTER  atom-specification
 MOVE z atom-specification  ...
 SELECT atom-parameter  operator  value, . .
 SORT type1 type2 ...
 SORT keyword
 DSORT type1 type2 ...
 RENAME atom1  atom2  (, atom1  atom2) ...
 TYPECHANGE keyword operator value new-atom-type
 CHANGE  parameter-specification value ...
 ADD  value parameters  ...
 SUBTRACT  value  parameters  ...
 MULTIPLY  value  parameters  ...
 DIVIDE  value  parameters  ...
 PERTURB value parameters ...
 SHIFT  v1, v2, v3   atom-specification . .
 TRANSFORM  r11, r21, r31, . . . r33  atom-specification . .
 DEORTHOGINAL  atom-specification . .
 UEQUIV  atom-specifications  .  .
 ANISO  atom-specifications  .  .
 INSERT identifier=name
 END
#
==================
\REGROUP - Reorganisation of lists 5 and 10#
==================

 
::

 \REGROUP inputlist= outputlist=
 SELECT move= keep= monitor= sequence= symmetry= translation=
 END
#
==================
\COLLECT - Repositioning of atoms#
==================

 
::

 \COLLECT inputlist= outputlist=
 SELECT monitor= tolerance= type= symmetry= translation=
 END
#
==================
\CONVERT - Conversion of temperature factors#
==================

 
::

 \CONVERT inputlist= outputlist= crossterms=
 END
#
==================
\HYDROGENS - Hydrogen placing#
==================

 
::

 \HYDROGENS inputlist= outputlist=
 DISTANCE  d
 SERIAL    n
 U[ISO]    u
 U[ISO]    next   mult
 AFTER     type(serial)
 PHENYL    x r(1) r(2) r(3) r(4) r(5)
 H33       x r(1) r(2)
 H23       x r(1) r(2)
 H13       x r(1) r(2) r(3)
 H22       x r(1) r(2)
 H12       x r(1) r(2)
 H11       x r(1)
 END
#
==================
\PERHYDRO - Perhydrogenation#
==================

 
::

 \PERHYDRO
 U[ISO] next 1.2
 END
==================
\REGULARISE - Regularisation of atomic groups#
==================

 
::

 \REGULARISE    mode
 COMPARE
 KEEP
 REPLACE
 AUGMENT
 METHOD number
 GROUP number
 TARGET aTOM sPECIFICATIONS
 IDEAL  aTOM sPECIFICATIONS
 SYSTEM a b c alpha beta gamma
 ATOM    x    y    z
 HEXAGON x
 PHENYL
 SQUARE x y
 OCTAHEDRON x y z
 SQP x y z
 TBP x z
 TETRAHEDRON x
 END
#

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Structure Factors and Least Squares
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

==================
\LIST 23 Structure Factor Control List#
==================

 
::

 \LIST 23
 MODIFY anom= extinct= layerscale= batchscale= partial= update= enantio=
 MINIMISE nsingularity= f-squared= reflections= restrain=
 REFINE  special= update= tolerance=
 ALLCYCLES min-r= max-r= *-wr= *-sumsq= *-minfunc= u[min]=
 INTERCYCLE min-dr= max-dr= *-dwr= *-dsumsq= *-dminfunc=
 END
#
==================
\SPECIAL - Special position constraints#
==================

 
::

 \SPECIAL  action= update= tolerance=#
 END
#
==================
\LIST 12 - Refinement directives#
==================

 
::

 \LIST 12
 BLOCK  parameters ...
 FIX  parameters ...
 EQUIVALENCE  parameters ...
 RIDE  atom_parameter specifications ...
 LINK parameter_list and parameter_list and parameter_list.
 COMBINE parameters_list and parameters_list
 GROUP  atom specifications
 WEIGHT f1 parameters f2 parameters ...
 FULL  parameters
 DIAGONAL  parameters
 PLUS  parameters
 END
#
==================
\CLEAR 12 - Creating a null LIST 12 #
==================

 
::

 \CLEAR 12
 END
#
==================
\LIST 22 - Processing of LIST 12#
==================

 
::

 \LIST 22
 END
#
==================
\LIST 16 - Restraint Instructions#
==================

 
::

 \LIST 16
 DISTANCES  value, e.s.d= bond1, bond2
 DISTANCES  value, e.s.d= mean bond1, bond2
 DISTANCES  value, e.s.d= difference bond1, bond2
 NONBONDED  value, powerfactor=  bond1, bond2
 ANGLES     value, e.s.d= angle1, angle2
 ANGLES     value, e.s.d= mean angle1, angle2
 ANGLES     value, e.s.d= difference angle1, angle2
 VIBRATIONS value, e.s.d= bond1, bond2
 U(IJ)'S    value, e.s.d= bond1, bond2
 PLANAR            e.s.d  for 'atom specifications'
 LIMIT             e.s.d  for 'parameter specifications'
 ORIGIN            e.s.d  for 'parameter specifications'
 SUM               e.s.d  for 'parameter specifications'
 AVERAGE           e.s.d  for 'parameter specifications'
 RESTRAIN   value, e.s.d= text
 DEFINE name = text
 COMPILER
 EXECUTION
 END
#
==================
\CLEAR 16 - Creating a null LIST 16 #
==================

 
::

 \CLEAR 16
#
==================
\CLEAR 17 - Creating a null LIST 17 #
==================

 
::

 \CLEAR 17
 END
#
==================
\CHECK - Checking restraints#
==================

  \CHECK level=
 END
#
==================
\LIST 4 - Weighting Schemes#
==================

 
::

 \LIST 4
 SCHEME number= nparameters= type= weight= maximum=
 PARAMETERS p=
 END
#
==================
\WEIGHT - Weighting the reflections#
==================

 
::

 \WEIGHT
#
==================
\LIST 28 - Reflection Restrictions#
==================

 
::

 \LIST 28
 MINIMA coefficient(1)= coefficient(2)= ...
 MAXIMA coefficient(1)= coefficient(2)= ...
 READ nslices= nomissions= nconditions=
 SLICE p= q= r= s= t= type=
 OMIT h= k= l=
 CONDITION p= q= r= s= t= type
 SKIP step=
 END
#
==================
Creating a null LIST 28#
==================


::

 \LIST 28
 END
#
==================
\SFLS - Structure Factor Least Squares Calculations#
==================

 
::

 \SFLS
 CALCULATE list= map= fo=
 SCALE list= map= fo=
 REFINE list= map= fo= punch= matrix= monitor= invertor=
 SHIFT  key= key=
 MAXIMUM  key= key=
 FORCE  key= key=
 SOLVE monitor= ma=p fo= punch= matrix=
 VECTOR monitor= map= fo= punch= matrix=
 END
#
==================
\ANALYSE - Analysis of residuals#
==================

 
::

 \ANALYSE
 FO interval= type= scale=
 THETA interval=
 LIST level=
 LAYERSCALE axis= apply= analyse=
 END
#
==================
\DIFABS - Least squares absorption correction#
==================

 
::

 \DIFABS  action= mode=
 CORRECTION theta=
 DIFFRACTION geometry= mode=
 END
#

^^^^^^^^^^^^^^^^
Fourier Routines
^^^^^^^^^^^^^^^^

==================
\LIST 14 - Fourier Section Limits#
==================

 
::

 \LIST 14
 X-AXIS minimum= step= maximum= division=
 Y-AXIS minimum= step= maximum= division=
 Z-AXIS minimum= step= maximum= division=
 X-PAT minimum= step= maximum= division=
 Y-PAT minimum= step= maximum= division=
 Z-PAT minimum= step= maximum= division=
 ORIENTATION down= across= through=
 SCALEFACTOR value=
#
==================
\FOURIER - Fourier calculations#
==================

 
::

 \FOURIER
 MAP type= ne= print= scan= scale= origin= nmap= monitor=
 REFLECTIONS weight= reject= f000= calc=
 LAYOUT nline= ncharacter= margin= nspace= min-rho= max-rho=
 PEAKS height= npeak= reject=
 TAPES input= output=
 END
#
==================
\PEAKS - Elimination of duplicated entries in LISTS 5 and 10#
==================

 
::

 \PEAKS inputlist= outputlist=
 SELECT reject= keep= moni= seq= type= regroup= move= symm= trans=
 REFINE distance= multiplier=
 END
#
==================
\SLANT - Slant fourier calculations#
==================

 
::

 \SLANT
 MAP type= min-rho= scale= weight=
 SAVED matrix=
 CENTROID xo= yo= zo=
 MATRIX r(11)= r(12)= r(13)= r(21)=  .  .  . r(33)=
 DOWN minimum= number= step=
 ACROSS minimum= number= step=
 SECTION minimum= number= step=
 END
#

^^^^^^^^^^^^^^^^^^^
Analysis of Results
^^^^^^^^^^^^^^^^^^^

==================
\DISTANCE - Distance angles calculations#
==================

 
::

 \DISTANCES inputlist=
 OUTPUT monitor=  list= punch=
 SELECT alldistances= coordinates= sorted= type= range=
 LIMITS dminimum= dmaximum= aminimum= amaximum=
 E.S.D.S compute= cell=
 INCLUDE atoms
 EXCLUDE atoms
 END
#
==================
\MOLAX - Least squares best planes and lines#
==================

 
::

 \MOLAX inputlist=
 EXECUTE
 ATOMS  w(1)  specification(1)  w(2)  specification(2) .
 PLOT
 PLANE
 LINE
 ANGLE  np(1)  and  np(2)
 EVALUATE  atom specifications . . . .
 REPLACE atom specifications . . .
 SAVE
 QUIT
 END
#
==================
\TORSION - Torsion angles#
==================

 
::

 \TORSION inputlist=
 ATOMS  specifications
 PUBLICATION  punch=
 END
#
==================
\ANISO - Thermal displacement parameter analysis#
==================

 
::

 \ANISO inputlist
 EXECUTE
 ATOMS   atom specifications
 CENTRE   x=, y=, z=
 REJECT   nv=
 LIMITS   value=   ratio=
 TLS
 EVALUATE atom specifications
 REPLACE atom specifications . . .
 SAVE
 QUIT
 AXES
 DISTANCES  dl=   al=
 ANGLES  al=
 END
#
==================
\AXES - Principal atomic displacement directions#
==================

 
::

 \AXES inputlist=
 END
#
==================
\PARAMETERS - Publication listing of the atomic parameters#
==================

 
::

 \PARAMETERS
 LAYOUT= inset= atom= double= choose= float= nchar= nline= listaxes=
 COORDINATES nchar= ndecimal= select= type= display= print= punch=
 U'S nchar= ndec= select= type= display= print= punch=
 END
#
==================
\SUMMARY - Summary of data lists#
==================

 
::

 \SUMMARY of= type= level=

 \SUMMARY list 5 high
 END
 \SUMMARY everything
 END
#
==================
\CIF - Cif lists#
==================

 
::

 \CIF
 END
#
==================
\CAMERON - Graphics#
==================

 
::

 \CAMERON
 END
#
